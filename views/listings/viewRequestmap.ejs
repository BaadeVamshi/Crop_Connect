<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mapbox Demo</title>

  <link href="https://api.mapbox.com/mapbox-gl-js/v3.10.0/mapbox-gl.css" rel="stylesheet" />
  <script src="https://api.mapbox.com/mapbox-gl-js/v3.10.0/mapbox-gl.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@turf/turf@6/turf.min.js"></script> <!-- Turf.js for distance -->

  <style>
    .delete-button {
      margin-top: 2rem;
      margin-left: 2rem;
      display: inline-block;
      background-color: #e53935;
      color: white;
      padding: 12px 20px;
      font-size: 16px;
      text-decoration: none;
      border: none;
      border-radius: 8px;
      transition: background-color 0.3s ease, transform 0.2s ease;
      cursor: pointer;
    }

    .delete-button:hover {
      background-color: #c62828;
      transform: scale(1.05);
    }

    .delete-button:active {
      transform: scale(0.98);
    }

    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f4f4f4;
    }

    .heading {
      text-align: center;
      padding: 1.5rem;
      margin: 1rem;
      font-size: 2.5rem;
      background: linear-gradient(to right, #1e1e2f, #2f3542);
      color: white;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      letter-spacing: 1px;
      font-weight: 600;
    }

    .heading .highlight {
      color: #ff4757;
      font-weight: bold;
    }

    .map-container {
      padding: 2rem;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    #map {
      border: 4px solid #1e1e2f;
      border-radius: 12px;
      height: 85vh;
      width: 90vw;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    .mapboxgl-popup {
      max-width: 200px;
      font-size: 14px;
    }

    .marker:hover {
      cursor: pointer;
    }

    .farmer-marker:hover {
      cursor: pointer;
      transform: scale(1.1);
      transition: transform 0.2s ease;
    }
  </style>
</head>

<% layout("/layout/boilerplatebuyer") %>

<body>
  <h1 class="heading">üìç See Who‚Äôs <span class="highlight">Farmer</span> and Where</h1>

  <div class="map-container">
    <div id="map"></div>
  </div>

  <script>
    const mapToken = "<%= process.env.MAP_TOKEN %>";
    mapboxgl.accessToken = mapToken;

    const farmerlc = <%- JSON.stringify(farmercoordinate) %>;
    const buyerlc = <%- JSON.stringify(buyercoordinate) %>;

    const farmerMarkerEl = document.createElement('div');
    farmerMarkerEl.className = 'farmer-marker';
    farmerMarkerEl.style.backgroundImage = "url('/images/farmer.jpeg')";
    farmerMarkerEl.style.width = '40px';
    farmerMarkerEl.style.height = '40px';
    farmerMarkerEl.style.backgroundSize = 'cover';
    farmerMarkerEl.style.borderRadius = '50%';
    farmerMarkerEl.style.border = '2px solid #1e1e2f';
    farmerMarkerEl.title = "Farmer";

    const map = new mapboxgl.Map({
      container: 'map',
      style: "mapbox://styles/mapbox/streets-v12",
      center: farmerlc.coordinates,
      zoom: 9
    });

    const farmerPopup = new mapboxgl.Popup({ offset: 25 }).setHTML(`
      <h4>üßë‚Äçüåæ (Farmer)</h4>
      <p>Farmer Location</p>
    `);

    new mapboxgl.Marker(farmerMarkerEl)
      .setLngLat(farmerlc.coordinates)
      .setPopup(farmerPopup)
      .addTo(map);

    const buyerPopup = new mapboxgl.Popup({ offset: 25 }).setHTML(`
      <h4>üßë‚Äçüåæ (Buyer)</h4>
      <p>Buyer Location</p>
    `);

    const buyerMarker = new mapboxgl.Marker({ color: 'red' })
      .setLngLat(buyerlc.coordinates)
      .setPopup(buyerPopup)
      .addTo(map);

    const buyerElement = buyerMarker.getElement();
    buyerElement.style.cursor = 'pointer';

    buyerElement.addEventListener('click', () => {
      map.flyTo({
        center: buyerlc.coordinates,
        zoom: 10,
        speed: 0.7,
        curve: 1.3,
        essential: true
      });
    });

    map.on('load', () => {
      // Add line between farmer and buyer
      const line = {
        type: 'Feature',
        geometry: {
          type: 'LineString',
          coordinates: [farmerlc.coordinates, buyerlc.coordinates]
        }
      };

      map.addSource('line', {
        type: 'geojson',
        data: line
      });

     map.addLayer({
      id: 'line-layer',
      type: 'line',
      source: 'line',
      layout: {},
      paint: {
        'line-color': '#444', // light black color
        'line-width': 2,
        'line-dasharray': [2, 4] // creates a dashed line pattern
      }
    });


      // Calculate distance using Turf.js
      const distance = turf.distance(
        turf.point(farmerlc.coordinates),
        turf.point(buyerlc.coordinates)
      ).toFixed(2);

      const midLng = (farmerlc.coordinates[0] + buyerlc.coordinates[0]) / 2;
      const midLat = (farmerlc.coordinates[1] + buyerlc.coordinates[1]) / 2;

      new mapboxgl.Popup({ closeOnClick: false })
        .setLngLat([midLng, midLat])
        .setHTML(`<strong>Distance:</strong> ${distance} km`)
        .addTo(map);
    });
  </script>
</body>

</html>
